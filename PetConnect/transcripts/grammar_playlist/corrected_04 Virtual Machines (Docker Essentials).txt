Let's take a look at virtual machines. What is it about them that made them so popular and appealing? Here's what virtual machines do: they simulate hardware that runs a full operating system. When you run an operating system, it expects to run on hardware. There's no program that runs an operating system, at least not before virtual machines. Operating systems are expected to run on bare metal. Now, that term should be familiar to you. Bare metal runs on the hardware directly. Virtual machines allow you to simulate the hardware so that the operating system is running, thinking, "Hey, I'm running on bare metal," but it's actually fake metal being simulated by virtual machines. Virtual machines allow you to run one OS inside another OS. Okay, Windows always thinks it's executing on hardware, and there's nothing changing on the operating system to make this happen. The VM software is basically simulating or providing that virtual hardware to make this happen, alright? So, the way this works, you have physical hardware and you have something called a hypervisor. A hypervisor is either software or hardware that is capable of running virtual machines, running operating systems, and simulating this. If a hypervisor is hardware, it's basically a chip which knows how to simulate virtual machines. An application, or it can be software, in which case it's running on the operating system. So, you basically, like VirtualBox is a good example or even VMware solutions, you run Windows or Mac or Linux or whatever you install the VirtualBox software, and the VirtualBox software is what's referred to as a hypervisor. It's the emulator. What it does is it emulates hardware for an operating system to run, and now you can run something like Windows or Linux in that virtual software. Right, and now what you have here is two virtual machines being run by one hypervisor, which is basically a complete operating system that's running over here, and another complete operating system that's running over here, right? It's two virtual machines. So, again, this can be software running on an OS or directly on bare metal. So, now what you have is not just one app per server, what you have is one app per virtual machine, right? So, you want to run, so you are the same CT or whatever you want to run multiple applications on the same machine so you don't have to worry about provisioning. Okay, what is the capacity for this guy? Let's look at the load and all that. No, just get the best machine that you can get, right? That you can afford and run virtual machines on it. So, let's say one application has become viral, a lot of people using it, we'll just scale the capacity of that virtual machine, right? That virtual machine is still going to borrow memory from your actual hardware. So, let's say you have a VM very provision like, okay, I'm going to allocate like 32 GB of RAM. Well, it can only take a portion of your physical capacity. You can't have it be more than your physical capacity of that machine, right? But as long as you do that, you can partition the capacity well. So, like one application becomes popular, well, you can steal RAM from the other application that's running on low load at a certain point of time or whatever. You can manage that. You have more flexibility that way. All right, so the advantages are you can share some resources, you can shift VMs among servers, which is another big benefit, right? So you have a VM running on one machine and suddenly you realize, well, this VM is, you know, this application has become super duper popular. Now we can provision a much bigger machine and basically just lift and shift that VM to run on that different machine. It's going to work perfectly fine because it is not dependent on the machine that it's running on. It's a simulation. You just simulate another machine. It's not going to know anything. It's going to work just the same way. And here's another key. You have multiple operating systems that can work on the same server, right? You can provision a Linux host operating system and on VirtualBox, you can run Windows or vice versa. You can have a Windows which hosts Linux. Mac is not very conducive to being a guest operating system. So you cannot run a virtual machine which runs Mac or at least it's not legally allowed to run. You can technically run it, but it's not legally allowed. But you can run a Mac host, like a Mac running on bare metal, which runs a virtual machine which hosts Windows or Linux. That's possible too. So we have all these combinations and permutations that are possible with virtual machines, which is super useful. The other very important benefit is you have machine images. You can take a snapshot of a